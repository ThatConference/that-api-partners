type Partner @key(fields: "id") {
  id: ID!
  companyName: String!
  companyLogo: URL!
  website: URL!
  slug: Slug!
  heroImage: URL

  "Who is the partner, about us"
  aboutUs: String
  "Company goals"
  goals: [String]
  "Partner call to action at THAT Conference"
  callToAction: String
  "Partner call to action URL"
  callToActionUrl: URL
  "CTA One-liner for Spotlight page"
  callToActionSpotlight: String

  addressLineOne: String
  addressLineTwo: String
  city: String
  state: String
  zip: PostalCode

  contactNumber: PhoneNumber

  linkedIn: URL
  github: URL
  youtube: URL
  instagram: URL
  twitter: URL
  facebook: URL
  twitch: URL
  chat: URL
  blog: URL
  vlog: URL

  "A single job listing referenced by slug"
  jobListing(slug: String!): JobListing
  """
  Partners available jobs
  isfeatured: Boolean: list featured jobs only.
  """
  jobListings(isFeatured: Boolean): [JobListing]
  "The list of sessions for this partner"
  sessions: [AcceptedSession]
  "The list of members associated with this partner"
  members: [PublicProfile]
  "Does this partner have an active sponsorship"
  isActiveSponsor: Boolean
  "Total follower count includes private and public profile follows"
  followCount: Int
  "Members with public profile following/favoriting community. Defaults: pageSize: 20"
  followers(pageSize: Int, cursor: String): PagedMember
  "Assets assigned to this partner"
  assets: [Asset]
  "date and time partner record created. initial records may be missing this date"
  createdAt: Date
  "date and time this record was last updated"
  lastUpdatedAt: Date
  "member who last updated this record"
  lastUpdatedBy: PublicProfile
  "Admins only path"
  admin: PartnerAdminQuery @auth(requires: "admin")
}
