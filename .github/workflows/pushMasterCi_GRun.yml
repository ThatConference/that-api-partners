# Node Build and Validate and deploy on master push
name: Push Master CI for Cloud Run

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build partners
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: npm ci, run validate
        run: |
          cp .env.sample .env
          npm ci
          npm run validate
          rm .env
        env:
          CI: true
          HUSKY: 0
      - name: Post-Build Copies
        run: |
          cp ./package.json __build__/
          cp ./package-lock.json __build__/
          cp ./Dockerfile __build__/
          git rev-list --count master > __build__/ccnt.txt
      - name: Archive Build Artifact
        uses: actions/upload-artifact@v1
        with:
          name: tc-api
          path: __build__
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          fields: repo,message,commit,author,eventName,ref,workflow,job,took
          status: ${{ job.status }}
          author_name: Push Master CI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_DEV_NOTIFICATIONS }}
        if: job.status == 'failure' || job.status == 'cancelled'

  deploy:
    name: Deploy Partners to Cloud Run
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v1
        with:
          name: tc-api
          path: __build__
      - name: Setup gcloud Actions
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '356.0.0'
          service_account_key: ${{ secrets.GCLOUD_AUTH }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: gcloud docker cred helper
        run: gcloud auth configure-docker
        env:
          CLOUDSDK_CORE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
      - name: Build docker image
        run: |
          cp __build__/Dockerfile ./ && rm __build__/Dockerfile
          docker build . --tag us.gcr.io/${{ secrets.GCP_PROJECT_ID }}/partners
      - name: Publish image to gcp
        run: docker push us.gcr.io/${{ secrets.GCP_PROJECT_ID }}/partners
      - name: Deploy to Cloud Run
        run: |
          gcloud secrets versions access latest --secret any-secrets2array-util_file > secrets2array.sh && chmod +x secrets2array.sh
          GCR_ENV_VARS=$(gcloud secrets versions access latest --secret prod-api-non_gateway-env | ./secrets2array.sh)
          C_CNT=$(cat __build__/ccnt.txt)
          SENTRYREL=SENTRY_VERSION=that-api-partners@$(cat __build__/package.json | jq '.version' | tr -d '"')-$C_CNT.$(echo $GITHUB_SHA | cut -c1-7)
          GCR_ENV_VARS="${GCR_ENV_VARS}, ${SENTRYREL}"
          gcloud run deploy partners --image us.gcr.io/${{ secrets.GCP_PROJECT_ID }}/partners --region=us-central1 --platform=managed --allow-unauthenticated --set-env-vars="$GCR_ENV_VARS" --timeout=300 --memory=256Mi --cpu=1
        env:
          CLOUDSDK_CORE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          fields: repo,message,commit,author,eventName,ref,workflow,job,took
          status: ${{ job.status }}
          author_name: Push Master CI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_DEV_NOTIFICATIONS }}
        if: job.status == 'failure' || job.status == 'cancelled'

  post:
    name: GET Schema Refresh Request
    needs: [build, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: GET request refresh
        run: |
          REFRESH_RESULT=$(curl -s -f https://api.that.tech/.internal/apollo/schema-refresh?src=partners | jq '.status')
          echo result $REFRESH_RESULT
          if [ $REFRESH_RESULT != '"reloaded"' ]; then exit 99; fi
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          fields: repo,message,commit,author,eventName,ref,workflow
          status: ${{ job.status }}
          author_name: Push Master CI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_DEV_NOTIFICATIONS }}
        if: always()
