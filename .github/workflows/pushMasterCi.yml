# Node Build and Validate and deploy on master push
name: Push Master CI

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Use Node.js 10.x
        uses: actions/setup-node@master
        with:
          node-version: 10.x
      - name: npm ci, run validate
        run: |
          cp .env.sample .env
          npm ci
          npm run validate
      - name: Post-Build Copies
        run: |
          cp ./package.json __build__/
          cp ./package-lock.json __build__/
      - name: Archive Build Artifact
        uses: actions/upload-artifact@master
        with:
          name: tc-api
          path: __build__
      - name: Slack Notification
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author: Push Master CI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_DEV_NOTIFICATIONS }}
        if: job.status == 'failure' || job.status == 'cancelled'

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@master
        with:
          name: tc-api
      - name: write .env file
        run: echo ${{ secrets.ENV_FILE_PROD }} | base64 -d > tc-api/.env
      - name: Checks and verifications
        run: |
          echo $GITHUB_SHA
          echo $GITHUB_REF
          echo $PWD
          ls -lasiR
      - name: GCP Authentication
        uses: actions/gcloud/auth@master
        env:
          GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
      - name: Deploy Function - partners
        uses: actions/gcloud/cli@master
        env:
          CLOUDSDK_CORE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
        with:
          args: functions deploy partners --runtime nodejs10 --trigger-http --source $PWD/tc-api --entry-point graphEndpoint
      - name: Slack Notification
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author: Push Master CI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_DEV_NOTIFICATIONS }}
        if: always()

  post:
    name: GET Schema Refresh Request
    needs: [build, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: GET request refresh
        run: |
          REFRESH_RESULT=$(curl -s -f https://api.that.tech/.internal/apollo/schema-refresh?src=partners | jq '.status')
          echo result $REFRESH_RESULT
          if [ $REFRESH_RESULT != '"reloaded"' ]; then exit 99; fi
